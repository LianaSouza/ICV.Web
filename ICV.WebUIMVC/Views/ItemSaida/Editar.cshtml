@model ICV.WebUIMVC.Models.ItemSaidaModel

@{
    ViewData["Title"] = "Editar";
    Layout = "~/Views/Shared/_Layout_New.cshtml";
}

<section class="p-3">
    <div class="card shadow p-4">
        <div class="card-body">
            <section>
                <h2>Edição Saida Item</h2>
                <hr />
            </section>
            <section class="row justify-content-center mt-3">
                <div class="table-responsive rounded">
                    <table class="table table-bordered table-striped table-hover">
                        <thead class="table-dark">
                            <tr class="text-center">
                                <th scope="col">Codigo Doação</th>
                                <th scope="col">Nome</th>
                                <th scope="col">Quantidade</th>
                                <th scope="col">Categoria</th>
                                <th scope="col">Codigo Beneficiado</th>
                                <th scope="col">Data Cadastro</th>
                            </tr>
                        </thead>
                        <tbody class="text-center">
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.FKIdDoacao)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.NomeProduto)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.QuantidadeItem)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.categoriaProduto)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.FKIdBeneficiado)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => modelItem.DataCadastroItem)
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div>
                    <form asp-action="Editar">
                        <div class="row">
                            <div class="col-sm-3 mt-2">
                                <label>Código Produto</label>
                                <input asp-for="FKIdProduto" class="form-control " readonly />
                            </div>
                            <div class="col-sm-6 mt-2">
                                <label>Quantidade</label>
                                <input asp-for="QuantidadeItem" class="form-control" />
                            </div>
                            <div class="mt-3 text-end">
                                <a class="btn btn-secondary"  asp-action="Index"><i class="fas fa-arrow-left"></i> Retornar</a>
                                <input type="submit" value="Salvar" class="btn btn-success" data-myValue="@ViewBag.retorno  " />
                            </div>
                        </div>         
                    </form>
                </div>
            </section>
        </div>
    </div>
</section>

<script>

    var retorno = "@ViewBag.retorno";
    console.log("Esse"+retorno);



    $(document).ready(function () {

            if (retorno == "Erro" ) {
                const Toast = Swal.mixin({

                    toast: true,

                    position: 'top',

                    showConfirmButton: false,

                    timer: 2000,

                    didOpen: (toast) => {

                        toast.addEventListener('mouseenter', Swal.stopTimer)

                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }

                })

                Toast.fire({

                    title: 'Erro ao enviar os dados, revise as informações enviadas.',

                    icon: 'warning',

                    iconColor: 'red',

                })
            }
             if (retorno == "Sucesso" ) {
                const Toast = Swal.mixin({

                    toast: true,

                    position: 'top',

                    showConfirmButton: false,

                    timer: 2000,

                    didOpen: (toast) => {

                        toast.addEventListener('mouseenter', Swal.stopTimer)

                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }

                })

                Toast.fire({

                    title: 'Dados enviados com Sucesso!',

                    icon: 'success',

                    iconColor: 'green',

                })
             }
    });
</script>

